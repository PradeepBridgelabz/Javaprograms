package com.bridgeit.ObjectOrientedPrograms;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

import com.bridgeit.datastructure.UserDefinedLinkedList;
import com.bridgeit.utility.Utility;

public class Transaction {
	private  String userName;
	private  int numberOfShares;
	private  int ammount;
	String userFile="/home/bridgeit/Json/userAccount.json";
	String companyFile="/home/bridgeit/Json/companyShares.json";
	JSONArray jsonArray=new JSONArray();
	JSONObject jsonObject=new JSONObject();
    JSONArray jsonArray1=new JSONArray();
	JSONObject jsonObject1=new JSONObject();
	Utility utility=new Utility();
	@SuppressWarnings("rawtypes")
	UserDefinedLinkedList userDefinedLinkedList1=new UserDefinedLinkedList();
	@SuppressWarnings("rawtypes")
	UserDefinedLinkedList userDefinedLinkedList2=new UserDefinedLinkedList();
	@SuppressWarnings("rawtypes")
	UserDefinedLinkedList userDefinedLinkedList3=new UserDefinedLinkedList();
	public Transaction(String userName2, int numberOfShares2, int ammount2) throws IOException, ParseException 
	{
		this.userName=userName2;
		this.numberOfShares=numberOfShares2;
		this.ammount=ammount2;
		updatingUser();
		
	}
	
	private void updatingUser() throws IOException, ParseException {
		FileReader fileReader=new FileReader(userFile);
		BufferedReader br=new BufferedReader(fileReader);
		if(br.readLine()==null)
		{
			AddingTOObject(jsonArray,userName,numberOfShares,ammount);

		}
		else
		{
			jsonArray=getCurrentObject();
			AddingTOObject(jsonArray,userName,numberOfShares,ammount);

		}
		WritingIntoFile(jsonObject);
		
	}

	public Transaction() {
	}
	private void WritingIntoFile(JSONObject jsonObject2) throws IOException {
		FileWriter fileWriter=new FileWriter(userFile);
		BufferedWriter bufferedWriter=new BufferedWriter(fileWriter);
		bufferedWriter.write(jsonObject2.toJSONString());
		bufferedWriter.flush();
		bufferedWriter.close();
		
	}
	private JSONArray getCurrentObject() throws FileNotFoundException, IOException, ParseException {
		JSONParser jsonParser=new JSONParser();
		Object object=jsonParser.parse(new FileReader(userFile));
		JSONObject jsonObject=(JSONObject)object;
	    JSONArray jsonArray=(JSONArray)jsonObject.get("Users");
		
		return jsonArray;
	}
	@SuppressWarnings("unchecked")
	private void AddingTOObject(JSONArray jsonArray, String userName2, int numberOfShares2, int ammount2) {
	      JSONObject jsonObject1=new JSONObject();
	      jsonObject1.put("UserName", userName2);
	      jsonObject1.put("NumberOfShares", numberOfShares2);
	      jsonObject1.put("ammount", ammount2);
	      jsonArray.add(jsonObject1);
	      jsonObject.put("Users", jsonArray);
		
	}
	private void AddingTOOStockbject(JSONArray jsonArray) {
	      JSONObject jsonObject1=new JSONObject();
	      jsonObject.put("Users", jsonArray);
		
	}
	public void buy(String companyName, String symbol, int number) throws FileNotFoundException, IOException, ParseException
	{
		 JSONArray jsonArray=stockFileReading();
		 boolean trueOrFalse=checkCompanyNameAndSymbol(companyName,symbol,jsonArray);
		 if(trueOrFalse)
		 {
			 System.out.println("\t\t\t====user Detailes====\n");
			 System.out.println("\t\t\tEnter User name      \n");
			 String name=utility.StringInput();
			 System.out.println("\t\t\tEnter number of shares you want to buy\n");
			 int num=utility.IntegerInput();
			 boolean trueOrFalse1=isUserNameCarect(name);
			 if(trueOrFalse1)
			 {
				 JSONArray jsonArray1=stockFileReading();
				 JSONArray jsonArray2=userFileReading();
                 for(int i=0;i<jsonArray1.size();i++)
                 {
                	 JSONObject jsonObject=(JSONObject)jsonArray1.get(i);
       			  String companyName1=jsonObject.get("CompanyName").toString();
       			  String symbol1=jsonObject.get("stock_Symbol").toString();
       			  if(companyName1.equals(companyName)&&symbol1.equals(symbol))
       			  {
     				 for(int j=0;j<jsonArray2.size();j++)
     				 {

     					  JSONObject jsonObject1=(JSONObject)jsonArray.get(i);
     					  String username=jsonObject1.get("UserName").toString();
     					  if(name.equals(username))
     					  {
     						  System.out.println();
     						 System.out.println("\t\t\tPrice of each share is "+jsonObject.get("amount"));
     						System.out.println("So..enter the ammount"+"("+number+"*"+jsonObject.get("amount")+") :"+(number*(Integer.parseInt(jsonObject.get("amount").toString()))));
     					    int ammount=utility.IntegerInput();
     					    int balence=Integer.parseInt(jsonObject1.get("ammount").toString());
     					    int newbalence=balence-ammount;
     					    int userSharenum=Integer.parseInt(jsonObject1.get("NumberOfShares").toString());
     					    int newSharenum=userSharenum+num;
     					    int count=Integer.parseInt(jsonObject.get("Count").toString());
     					    int newCount=count-num;
     						jsonObject1.put("ammount", newbalence);
     						jsonObject1.put("NumberOfShares", newSharenum);
     						jsonObject.put("Count", newCount);
     						System.out.println("Transaction sucsessfull.....");
     						jsonArray2.add(jsonObject1);
     						jsonArray1.add(jsonObject);
							updateUserFile(jsonArray2);
							updateStockFile(jsonArray1);
							 break;
     					  }
     				 }

       			  }
                 }
				 
			 }
			 else
				 System.out.println("\t\t\tUserName not found...");
		 }
		 else
		 {
			 System.out.println("\t\t\tEnter correct company name and user name");
		 }
	}
		private void updateStockFile(JSONArray jsonArray01) throws IOException, ParseException {
			FileReader fileReader=new FileReader(companyFile);
			BufferedReader br=new BufferedReader(fileReader);
			if(br.readLine()==null)
			{
				AddingTOOStockbject(jsonArray01);

			}
			else
			{
				jsonArray01=getCurrentObject();
				AddingTOOStockbject(jsonArray01,userName,numberOfShares,ammount);

			}
			WritingIntoFile(jsonObject);
	}

		private void updateUserFile(JSONArray jsonArray2) throws IOException, ParseException {
		
			FileReader fileReader=new FileReader(userFile);
			BufferedReader br=new BufferedReader(fileReader);
			if(br.readLine()==null)
			{
				AddingTOObject1(jsonArray2);

			}
			else
			{
				jsonArray2=getCurrentObject();
				AddingTOObject1(jsonArray2);

			}
			WritingIntoFile(jsonObject);
	}

		private void AddingTOObject1(JSONArray jsonArray2) {
			
			JSONObject jsonObject1=new JSONObject();
		      jsonObject.put("Users", jsonArray);
		}

		private boolean isUserNameCarect(String name) throws FileNotFoundException, IOException, ParseException {
		  JSONArray jsonArray=userFileReading();
		  for(int i=0;i<jsonArray.size();i++)
		  {
			  JSONObject jsonObject=(JSONObject)jsonArray.get(i);
			  String username=jsonObject.get("UserName").toString();
			  if(name.equals(username))
			  {
				  return true;
			  }
		  }
		return false;
	}

		private boolean checkCompanyNameAndSymbol(String companyName, String symbol, JSONArray jsonArray)
		{
		  for(int i=0;i<jsonArray.size();i++)
		  {
			  JSONObject jsonObject=(JSONObject) jsonArray.get(i);
			  String companyName1=jsonObject.get("CompanyName").toString();
			  String symbol1=jsonObject.get("stock_Symbol").toString();
			  if(companyName1.equals(companyName)&&symbol1.equals(symbol))
			  {
				  return true;
			  }
		  }
		  return false;
		
	    }

		private void updateIntoFile() throws IOException, ParseException {
			updatingUser();
			
}
		//}
	
	public String getUserName() {
		return userName;
	}
	public void setUserName(String userName) {
		this.userName = userName;
	}
	public int getNumberOfShares() {
		return numberOfShares;
	}
	public void setNumberOfShares(int numberOfShares) {
		this.numberOfShares = numberOfShares;
	}
	public int getAmmount() {
		return ammount;
	}
	public void setAmmount(int ammount) {
		this.ammount = ammount;
	}
	@Override
	public String toString()
	{
		return userName+" "+numberOfShares+" "+ammount+"\n";
	}
	@SuppressWarnings("unchecked")
	public void addingCompanyShares() throws FileNotFoundException, IOException, ParseException  {
		JSONArray jsonArray=stockFileReading();
		for(int i=0;i<jsonArray.size();i++)
		{
			JSONObject jsonObject2=(JSONObject)jsonArray.get(i);
			userDefinedLinkedList1.add(jsonObject2.get("CompanyName"));
			userDefinedLinkedList2.add(jsonObject2.get("stock_Symbol"));
			userDefinedLinkedList3.add(jsonObject2.get("amount").toString());
			
		}
	}
	public JSONArray stockFileReading() throws FileNotFoundException, IOException, ParseException {
		 
			JSONParser jsonParser=new JSONParser();
			Object object=jsonParser.parse(new FileReader(companyFile));
			JSONObject jsonObject=(JSONObject)object;
			JSONArray jsonArray=(JSONArray)jsonObject.get("Stocks");
			return jsonArray;
}
	public JSONArray userFileReading() throws FileNotFoundException, IOException, ParseException {
		 
		JSONParser jsonParser=new JSONParser();
		Object object=jsonParser.parse(new FileReader(companyFile));
		JSONObject jsonObject=(JSONObject)object;
		JSONArray jsonArray=(JSONArray)jsonObject.get("Users");
		return jsonArray;
}
	public void disply() throws FileNotFoundException, IOException, ParseException {
	
		JSONArray jsonArray=stockFileReading();
		System.out.println("\t\t\t=======Company Lists======\n");
		for(int i=0;i<jsonArray.size();i++)
		{
			JSONObject jsonObject2=(JSONObject)jsonArray.get(i);
			System.out.println("\t\t\t=======Company "+(i+1)+"========\n");
		System.out.println("\t\t\tCompanyName     :"+jsonObject2.get("CompanyName")+"\n");
		System.out.println("\t\t\tstock_Symbo     :"+jsonObject2.get("stock_Symbol")+"\n");
		System.out.println("\t\t\tShare ammount   :"+jsonObject2.get("amount").toString()+"\n");
		System.out.println("\t\t\tNumber of Shares:"+jsonObject2.get("amount").toString()+"\n");
			
		}
		System.out.println("\t\t\tEnter your choice\n");
		
	}
}
